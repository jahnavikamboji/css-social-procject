(this.webpackJsonp=this.webpackJsonp||[]).push([[325],{"Jw/Q":function(e,t,i){"use strict";i.r(t);var a=i("ewH8"),n=i("jlnU"),r=i("2ibD"),s=i("/lV4"),l=i("ejAS"),o=(i("byxs"),i("yi8e")),d=i("NmEs"),c=i("3twG"),m=i("m4yQ"),u=i("Knu6"),p=i("Iixh"),g=i("lOtA"),v=i("c0EM"),h=i("y2bm"),f=i("tBpV"),k=Object(f.a)({},(function(){return(0,this._self._c)("router-view")}),[],!1,null,null,null).exports,_=i("SXCz"),b=i("gpiL"),y=i("1fc5"),S=i("4lAS"),j=i("FkSe"),N=i("z1xw"),w=i("Mp8J"),C=i("Q4Z+"),I=i.n(C),E=i("iM2x"),P=i("rK/1"),F=i("Lzak"),T=i("A7K0"),O=i("MV2A"),D=i("qLpH");const x=Object(s.__)("Subject Key Identifier:"),U={VERIFIED:"VERIFIED",UNVERIFIED:"UNVERIFIED",UNVERIFIED_KEY:"UNVERIFIED_KEY",UNKNOWN_KEY:"UNKNOWN_KEY",OTHER_USER:"OTHER_USER",SAME_USER_DIFFERENT_EMAIL:"SAME_USER_DIFFERENT_EMAIL",MULTIPLE_SIGNATURES:"MULTIPLE_SIGNATURES",REVOKED_KEY:"REVOKED_KEY",VERIFIED_SYSTEM:"VERIFIED_SYSTEM"},A="GpgSignature",L="X509Signature",R="SshSignature",K={variant:"muted",label:Object(s.__)("Unverified"),title:Object(s.__)("Unverified signature"),description:Object(s.__)("This commit was signed with an unverified signature.")},V={variant:"success",label:Object(s.__)("Verified"),title:Object(s.__)("Verified commit")},B={[U.VERIFIED]:{...V,description:Object(s.__)("This commit was signed with a verified signature and the committer email was verified to belong to the same user.")},[U.VERIFIED_SYSTEM]:{...V,description:Object(s.__)("This commit was created in the GitLab UI, and signed with a GitLab-verified signature.")},[U.UNVERIFIED]:{...K},[U.UNVERIFIED_KEY]:{...K},[U.UNKNOWN_KEY]:{...K},[U.OTHER_USER]:{variant:"muted",label:Object(s.__)("Unverified"),title:Object(s.__)("Different user's signature"),description:Object(s.__)("This commit was signed with an unverified signature.")},[U.SAME_USER_DIFFERENT_EMAIL]:{variant:"muted",label:Object(s.__)("Unverified"),title:Object(s.__)("GPG key mismatch"),description:Object(s.__)("This commit was signed with a verified signature, but the committer email is not associated with the GPG Key.")},[U.MULTIPLE_SIGNATURES]:{variant:"muted",label:Object(s.__)("Unverified"),title:Object(s.__)("Multiple signatures"),description:Object(s.__)("This commit was signed with multiple signatures.")},[U.REVOKED_KEY]:{variant:"muted",label:Object(s.__)("Unverified"),title:Object(s.s__)("CommitSignature|Unverified signature"),description:Object(s.s__)("CommitSignature|This commit was signed with a key that was revoked.")}},$={[A]:{keyLabel:Object(s.__)("GPG Key ID:"),keyNamespace:"gpgKeyPrimaryKeyid",helpLink:{label:Object(s.__)("Learn about signing commits"),path:"user/project/repository/signed_commits/index.md"}},[L]:{keyLabel:"",helpLink:{label:Object(s.__)("Learn more about X.509 signed commits"),path:"/user/project/repository/signed_commits/x509.md"},subjectTitle:Object(s.__)("Certificate Subject"),issuerTitle:Object(s.__)("Certificate Issuer"),keyIdentifierTitle:Object(s.__)("Subject Key Identifier:")},[R]:{keyLabel:Object(s.__)("SSH key fingerprint:"),keyNamespace:"keyFingerprintSha256",helpLink:{label:Object(s.__)("Learn about signing commits with SSH keys."),path:"/user/project/repository/signed_commits/ssh.md"}}},G={...B,[{...U,VERIFIED_CA:"VERIFIED_CA"}.VERIFIED_CA]:{...V,description:Object(s.__)("This commit was signed with a certificate issued by top-level group Certificate Authority (CA) and the committer email was verified to belong to the same user.")}};var q={props:{subject:{type:String,required:!0},title:{type:String,required:!0},subjectKeyIdentifier:{type:String,required:!0}},computed:{subjectValues(){return this.subject.split(",")},subjectKeyIdentifierToDisplay(){return this.subjectKeyIdentifier.replaceAll(":"," ")}},i18n:{keyIdentifierTitle:x}},H=Object(f.a)(q,(function(){var e=this,t=e._self._c;return t("div",[t("strong",[e._v(e._s(e.title))]),e._v(" "),t("ul",{staticClass:"gl-pl-5"},[e._l(e.subjectValues,(function(i){return t("li",{key:i,attrs:{"data-testid":"subject-value"}},[e._v("\n      "+e._s(i)+"\n    ")])})),e._v(" "),t("li",{attrs:{"data-testid":"key-identifier"}},[e._v("\n      "+e._s(e.$options.i18n.keyIdentifierTitle)+" "+e._s(e.subjectKeyIdentifierToDisplay)+"\n    ")])],2)])}),[],!1,null,null,null).exports,M={components:{GlBadge:F.a,GlPopover:T.a,GlLink:O.a,X509CertificateDetails:H},props:{signature:{type:Object,required:!0}},computed:{statusConfig(){var e,t;return null===(e=this.$options.statusConfig)||void 0===e?void 0:e[null===(t=this.signature)||void 0===t?void 0:t.verificationStatus]},typeConfig(){var e,t;return null===(e=this.$options.typeConfig)||void 0===e?void 0:e[null===(t=this.signature)||void 0===t?void 0:t.__typename]}},methods:{helpPagePath:D.a,getSubjectKeyIdentifierToDisplay:e=>e.replaceAll(":"," ")},typeConfig:$,statusConfig:G},J=Object(f.a)(M,(function(){var e=this,t=e._self._c;return e.statusConfig&&e.typeConfig?t("span",{staticClass:"gl-ml-2 gl-flex gl-items-center hover:gl-cursor-pointer"},[t("button",{staticClass:"gl-border-0 gl-bg-transparent gl-p-0 gl-outline-none",attrs:{id:"signature",tabindex:"0","data-testid":"signature-badge",role:"button",variant:"link","aria-label":e.statusConfig.label}},[t("gl-badge",{attrs:{variant:e.statusConfig.variant}},[e._v("\n      "+e._s(e.statusConfig.label)+"\n    ")])],1),e._v(" "),t("gl-popover",{attrs:{target:"signature",triggers:"focus"},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("\n      "+e._s(e.statusConfig.title)+"\n    ")]},proxy:!0}],null,!1,1615281952)},[e._v(" "),t("p",{attrs:{"data-testid":"signature-description"}},[e._v("\n      "+e._s(e.statusConfig.description)+"\n    ")]),e._v(" "),e.typeConfig.keyLabel?t("p",{attrs:{"data-testid":"signature-key-label"}},[e._v("\n      "+e._s(e.typeConfig.keyLabel)+"\n      "),t("span",{staticClass:"gl-font-monospace",attrs:{"data-testid":"signature-key"}},[e._v("\n        "+e._s(e.signature[e.typeConfig.keyNamespace]||e.__("Unknown"))+"\n      ")])]):e._e(),e._v(" "),e.signature.x509Certificate?t("x509-certificate-details",{attrs:{title:e.typeConfig.subjectTitle,subject:e.signature.x509Certificate.subject,"subject-key-identifier":e.getSubjectKeyIdentifierToDisplay(e.signature.x509Certificate.subjectKeyIdentifier)}}):e._e(),e._v(" "),e.signature.x509Certificate&&e.signature.x509Certificate.x509Issuer?t("x509-certificate-details",{attrs:{title:e.typeConfig.issuerTitle,subject:e.signature.x509Certificate.x509Issuer.subject,"subject-key-identifier":e.getSubjectKeyIdentifierToDisplay(e.signature.x509Certificate.x509Issuer.subjectKeyIdentifier)}}):e._e(),e._v(" "),t("gl-link",{attrs:{href:e.helpPagePath(e.typeConfig.helpLink.path)}},[e._v("\n      "+e._s(e.typeConfig.helpLink.label)+"\n    ")])],1)],1):e._e()}),[],!1,null,null,null).exports,Q=i("jEr0"),Y=i("ITU6"),z=i("h6C7"),X=i.n(z),W=i("JYQl"),Z=i("uQq6"),ee=i("b/FR"),te=i("s1D3"),ie=i("IZAz"),ae=i("Fsq/"),ne=i("ZHzM"),re=i("+kWK"),se={components:{UserAvatarLink:ne.a,TimeagoTooltip:ae.a,GlIcon:te.a,GlButton:S.a,GlLink:O.a,UserAvatarImage:re.a},directives:{GlTooltip:N.a,SafeHtml:w.a},mixins:[Q.a],props:{commit:{type:Object,required:!0},historyUrl:{type:String,required:!1,default:""}},data:()=>({showDescription:!1}),computed:{commitDescription(){var e;return null===(e=this.commit)||void 0===e||null===(e=e.descriptionHtml)||void 0===e?void 0:e.replace(/^&#x000A;/,"")},avatarLinkAltText(){return Object(s.sprintf)(Object(s.__)("%{username}'s avatar"),{username:this.commit.authorName})},commitId(){var e;return null===(e=this.commit)||void 0===e||null===(e=e.sha)||void 0===e?void 0:e.substr(0,8)}},methods:{toggleShowDescription(){this.showDescription=!this.showDescription}},defaultAvatarUrl:ie.a,safeHtmlConfig:{ADD_TAGS:["gl-emoji"]},i18n:{toggleCommitDescription:Object(s.__)("Toggle commit description"),authored:Object(s.__)("authored")}},le=Object(f.a)(se,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"well-segment !gl-px-4 !gl-py-3"},[t("div",{staticClass:"gl-flex gl-flex-wrap gl-items-center gl-justify-between"},[t("div",{staticClass:"gl-flex gl-items-center gl-gap-3 gl-text-sm"},[e.commit.author?t("user-avatar-link",{attrs:{"link-href":e.commit.author.webPath,"img-src":e.commit.author.avatarUrl,"img-alt":e.avatarLinkAltText,"img-size":32}}):t("user-avatar-image",{attrs:{"img-src":e.commit.authorGravatar||e.$options.defaultAvatarUrl,size:32}}),e._v(" "),t("gl-link",{staticClass:"commit-row-message item-title gl-line-clamp-1 gl-whitespace-normal !gl-break-all",class:{"gl-italic":!e.commit.message},attrs:{href:e.commit.webPath}},[t("gl-icon",{attrs:{name:"commit"}}),e._v("\n        "+e._s(e.commitId)+"\n      ")],1),e._v(" "),t("timeago-tooltip",{staticClass:"gl-text-subtle",attrs:{time:e.commit.authoredDate,"tooltip-placement":"bottom"}})],1),e._v(" "),t("div",{staticClass:"gl-flex gl-items-center gl-gap-3"},[t("gl-button",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip"}],staticClass:"text-expander",class:{open:e.showDescription},attrs:{title:e.$options.i18n.toggleCommitDescription,"aria-label":e.$options.i18n.toggleCommitDescription,selected:e.showDescription,icon:"ellipsis_h","data-testid":"text-expander"},on:{click:e.toggleShowDescription}}),e._v(" "),t("gl-button",{attrs:{size:"small","data-testid":"collapsible-commit-history",href:e.historyUrl}},[e._v("\n        "+e._s(e.__("History"))+"\n      ")])],1)]),e._v(" "),e.showDescription?t("div",{staticClass:"gl-mt-4"},[t("p",{staticClass:"commit-row-message gl-line-clamp-1 gl-whitespace-normal !gl-break-all gl-font-bold",class:{"gl-italic":!e.commit.message}},[e._v("\n      "+e._s(e.commit.titleHtml)+"\n    ")]),e._v(" "),t("div",{staticClass:"committer gl-basis-full gl-truncate gl-text-sm",attrs:{"data-testid":"committer"}},[e.commit.author?t("gl-link",{staticClass:"commit-author-link js-user-link",attrs:{href:e.commit.author.webPath}},[e._v("\n        "+e._s(e.commit.author.name))]):[e._v("\n        "+e._s(e.commit.authorName)+"\n      ")],e._v("\n      "+e._s(e.$options.i18n.authored)+"\n      "),t("timeago-tooltip",{attrs:{time:e.commit.authoredDate,"tooltip-placement":"bottom"}})],2),e._v(" "),e.commit.descriptionHtml?t("pre",{directives:[{name:"safe-html",rawName:"v-safe-html:[$options.safeHtmlConfig]",value:e.commitDescription,expression:"commitDescription",arg:e.$options.safeHtmlConfig}],staticClass:"commit-row-description gl-mb-3 gl-whitespace-pre-wrap"}):e._e()]):e._e()])}),[],!1,null,null,null).exports,oe={components:{CommitInfo:ee.a,CollapsibleCommitInfo:le,ClipboardButton:P.a,SignatureBadge:J,CiIcon:E.a,GlButtonGroup:y.a,GlButton:S.a,GlLoadingIcon:j.a},directives:{GlTooltip:N.a,SafeHtml:w.a},mixins:[Q.a],apollo:{projectPath:{query:X.a},commit:{query:I.a,variables(){return{projectPath:this.projectPath,ref:this.ref,refType:Object(Y.a)(this.refType),path:this.currentPath.replace(/^\//,"")}},update:function(e){var t,i;const a=null===(t=e.project)||void 0===t||null===(t=t.repository)||void 0===t||null===(t=t.paginatedTree)||void 0===t||null===(t=t.nodes[0])||void 0===t?void 0:t.lastCommit,n=null==a||null===(i=a.pipelines)||void 0===i?void 0:i.edges;return{...a,pipeline:(null==n?void 0:n.length)&&n[0].node}},error(e){throw e}}},props:{currentPath:{type:String,required:!1,default:""},refType:{type:String,required:!1,default:null},historyUrl:{type:String,required:!1,default:""}},data:()=>({projectPath:"",commit:null}),computed:{statusTitle(){var e;return Object(s.sprintf)(Object(s.s__)("PipelineStatusTooltip|Pipeline: %{ciStatus}"),{ciStatus:null===(e=this.commit)||void 0===e||null===(e=e.pipeline)||void 0===e||null===(e=e.detailedStatus)||void 0===e?void 0:e.text})},isLoading(){return this.$apollo.queries.commit.loading},showCommitId(){var e;return null===(e=this.commit)||void 0===e||null===(e=e.sha)||void 0===e?void 0:e.substr(0,8)}},watch:{currentPath(){this.commit=null}},mounted(){W.a.$on(Z.f,this.refetchLastCommit)},beforeDestroy(){W.a.$off(Z.f,this.refetchLastCommit)},methods:{refetchLastCommit(){this.$apollo.queries.commit.refetch()}}},de=Object(f.a)(oe,(function(){var e=this,t=e._self._c;return e.isLoading?t("gl-loading-icon",{staticClass:"gl-m-auto gl-py-6",attrs:{size:"md",color:"dark"}}):e.commit?t("div",[t("commit-info",{staticClass:"gl-hidden sm:gl-flex",attrs:{commit:e.commit}},[t("div",{staticClass:"commit-actions gl-my-2 gl-flex gl-items-start gl-gap-3"},[e.commit.signature?t("signature-badge",{staticClass:"gl-h-7",attrs:{signature:e.commit.signature}}):e._e(),e._v(" "),e.commit.pipeline?t("div",{staticClass:"gl-ml-5 gl-flex gl-h-7 gl-items-center"},[t("ci-icon",{staticClass:"js-commit-pipeline gl-mr-2",attrs:{status:e.commit.pipeline.detailedStatus,"aria-label":e.statusTitle}})],1):e._e(),e._v(" "),t("gl-button-group",{staticClass:"js-commit-sha-group gl-ml-4 gl-flex gl-items-center"},[t("gl-button",{staticClass:"gl-font-monospace dark:!gl-bg-strong",attrs:{label:"","data-testid":"last-commit-id-label"}},[e._v(e._s(e.showCommitId))]),e._v(" "),t("clipboard-button",{staticClass:"input-group-text dark:!gl-border-l-section",attrs:{text:e.commit.sha,title:e.__("Copy commit SHA")}})],1),e._v(" "),t("gl-button",{staticClass:"!gl-ml-0",attrs:{category:"secondary","data-testid":"last-commit-history",href:e.historyUrl}},[e._v("\n        "+e._s(e.__("History"))+"\n      ")])],1)]),e._v(" "),t("collapsible-commit-info",{staticClass:"gl-block !gl-border-t-0 sm:gl-hidden",attrs:{commit:e.commit,"history-url":e.historyUrl}})],1):e._e()}),[],!1,null,null,null).exports,ce=i("HCGv"),me=i("QJd2"),ue=i("k6Do"),pe=i.n(ue),ge=i("FIKT"),ve=i.n(ge),he=i("f/vg"),fe=i.n(he),ke=i("htAy"),_e=i("t8rf"),be=i("jHQk"),ye=i("w/32"),Se=i("2o4f"),je=i("x5Io");a.default.use(o.b),a.default.use(u.a,{components:["SimpleViewer","BlobContent"]});var Ne=i("vcM6");t.default=function(){const{router:e,data:t,apolloProvider:i,projectPath:o}=function(){const e=document.getElementById("js-tree-list"),{dataset:t}=e,{projectPath:i,projectShortPath:n,ref:r,escapedRef:s,fullName:l,resourceId:o,userId:u,explainCodeAvailable:f,targetBranch:y}=t,S=Object(ke.a)(i,s);me.a.clients.defaultClient.cache.writeQuery({query:pe.a,data:{commits:[]}}),me.a.clients.defaultClient.cache.writeQuery({query:X.a,data:{projectPath:i}}),me.a.clients.defaultClient.cache.writeQuery({query:ve.a,data:{projectShortPath:n}}),me.a.clients.defaultClient.cache.writeQuery({query:fe.a,data:{ref:r,escapedRef:s}});const j=document.getElementById("js-last-commit");Object(je.a)({router:S}),function(){const e=document.getElementById("js-code-dropdown");if(!e)return!1;const{sshUrl:t,httpUrl:i,kerberosUrl:n,xcodeUrl:r,directoryDownloadLinks:s}=e.dataset;new a.default({el:e,router:S,render(e){return e(h.a,{props:{sshUrl:t,httpUrl:i,kerberosUrl:n,xcodeUrl:r,currentPath:this.$route.params.path,directoryDownloadLinks:JSON.parse(s)}})}})}(),new a.default({el:j,router:S,apolloProvider:me.a,render(e){const t=Object(ye.a)(j.dataset.historyLink,this.$route.params.path,this.$route.meta.refType||this.$route.query.ref_type);return e(de,{props:{currentPath:this.$route.params.path,refType:this.$route.meta.refType||this.$route.query.ref_type,historyUrl:t.href}})}}),new a.default({el:document.getElementById("js-blob-controls"),router:S,apolloProvider:me.a,render(e){return e(ce.a,{props:{projectPath:i,refType:this.$route.meta.refType||this.$route.query.ref_type}})}}),function(){const e=document.getElementById("js-tree-ref-switcher");if(!e)return!1;const{projectId:t,projectRootPath:i,refType:n}=e.dataset;new a.default({el:e,render:e=>e(g.a,{props:{projectId:t,value:n?Object(c.A)("refs",n,r):r,useSymbolicRefNames:!0,queryParams:{sort:"updated_desc"}},on:{input(e){Object(c.R)(Object(Se.a)(i,r,e))}}})})}(),function(){const e=document.getElementById("js-fork-info");if(!e)return null;const{selectedBranch:t,sourceName:n,sourcePath:r,sourceDefaultBranch:s,createMrPath:l,viewMrPath:o,canSyncBranch:c,aheadComparePath:m,behindComparePath:u}=e.dataset;new a.default({el:e,apolloProvider:me.a,render:e=>e(b.a,{props:{canSyncBranch:Object(d.J)(c),projectPath:i,selectedBranch:t,sourceName:n,sourcePath:r,sourceDefaultBranch:s,aheadComparePath:m,behindComparePath:u,createMrPath:l,viewMrPath:o}})})}(),S.afterEach((function({params:{path:e}}){Object(be.a)(e,r,l)}));const N=document.getElementById("js-repo-breadcrumb");if(N){const{canCollaborate:e,canEditTree:t,canPushCode:i,canPushToBranch:n,selectedBranch:s,newBranchPath:l,newTagPath:o,newBlobPath:c,forkNewBlobPath:m,forkNewDirectoryPath:u,forkUploadBlobPath:p,uploadPath:g,newDirPath:v}=N.dataset;S.afterEach((function({params:{path:e}}){Object(_e.b)(".js-create-dir-form",v,e)})),new a.default({el:N,router:S,apolloProvider:me.a,render(a){return a(_.a,{props:{currentPath:this.$route.params.path,refType:this.$route.query.ref_type,canCollaborate:Object(d.J)(e),canPushToBranch:Object(d.J)(n),canEditTree:Object(d.J)(t),canPushCode:Object(d.J)(i),originalBranch:r,selectedBranch:s,newBranchPath:l,newTagPath:o,newBlobPath:c,forkNewBlobPath:m,forkNewDirectoryPath:u,forkUploadBlobPath:p,uploadPath:g,newDirPath:v}})}})}return Object(m.default)({el:document.getElementById("js-tree-web-ide-link"),router:S}),new a.default({el:e,store:Object(p.a)(),router:S,apolloProvider:me.a,provide:{resourceId:o,userId:u,targetBranch:y,explainCodeAvailable:Object(d.J)(f),highlightWorker:new v.a},render:e=>e(k)}),{router:S,data:t,apolloProvider:me.a,projectPath:i}}();gon.features.blobRepositoryVueHeaderApp||function(e,t){if(e.pathLocksAvailable){const i=document.querySelector("a.js-path-lock");if(!i)return;i.addEventListener("click",(async function(a){a.preventDefault();const{dataset:o}=a.currentTarget,d="lock"===o.state?Object(s.__)("Are you sure you want to lock this directory?"):Object(s.__)("Are you sure you want to unlock this directory?");await Object(l.a)(d)&&(i.setAttribute("disabled","disabled"),r.a.post(e.pathLocksToggle,{path:t.currentRoute.params.path.replace(/^\//,"")}).then((function(){return window.location.reload()})).catch((function(){i.removeAttribute("disabled"),Object(n.createAlert)({message:Object(s.__)("An error occurred while initializing path locks")})})))}))}}(t,e),function(e,t,i){const n=document.querySelector("#js-code-owners");if(!n)return null;const{branch:r,canViewBranchRules:s,branchRulesPath:l}=n.dataset;new a.default({el:n,router:e,apolloProvider:t,render(e){return e(Ne.a,{props:{filePath:this.$route.params.path,projectPath:i,branch:r,canViewBranchRules:s,branchRulesPath:l}})}})}(e,i,o)}},Knu6:function(e,t,i){"use strict";const a={install(e,t){e.mixin({beforeCreate(){var e;const i=this.$options.name;if(-1!==(null==t||null===(e=t.components)||void 0===e?void 0:e.indexOf(i))){const e=`<${i}>`;performance.getEntriesByName(e+"-start").length||performance.mark(e+"-start")}},mounted(){var e;const i=this.$options.name;-1!==(null==t||null===(e=t.components)||void 0===e?void 0:e.indexOf(i))&&this.$nextTick((function(){window.requestAnimationFrame((function(){const e=`<${i}>`;performance.getEntriesByName(e+"-end").length||(performance.mark(e+"-end"),performance.measure(""+e,e+"-start"))}))}))}})}};t.a=a},"Q4Z+":function(e,t){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"pathLastCommit"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"path"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ref"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"refType"}},type:{kind:"NamedType",name:{kind:"Name",value:"RefType"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"repository"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"paginatedTree"},arguments:[{kind:"Argument",name:{kind:"Name",value:"path"},value:{kind:"Variable",name:{kind:"Name",value:"path"}}},{kind:"Argument",name:{kind:"Name",value:"ref"},value:{kind:"Variable",name:{kind:"Name",value:"ref"}}},{kind:"Argument",name:{kind:"Name",value:"refType"},value:{kind:"Variable",name:{kind:"Name",value:"refType"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastCommit"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sha"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"titleHtml"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"descriptionHtml"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webPath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authoredDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authorName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authorGravatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"author"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatarUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webPath"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"signature"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"GpgSignature"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"gpgKeyPrimaryKeyid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verificationStatus"},arguments:[],directives:[]}]}},{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"X509Signature"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verificationStatus"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"x509Certificate"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subject"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subjectKeyIdentifier"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"x509Issuer"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subject"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subjectKeyIdentifier"},arguments:[],directives:[]}]}}]}}]}},{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"SshSignature"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verificationStatus"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"keyFingerprintSha256"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"pipelines"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ref"},value:{kind:"Variable",name:{kind:"Name",value:"ref"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"1"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"node"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"detailedStatus"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"detailsPath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"icon"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tooltip"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"text"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"group"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:1911}};i.loc.source={body:"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!, $refType: RefType) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, refType: $refType) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                  }\n                }\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};function n(e,t){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==t)return a}}i.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,i){if("FragmentSpread"===t.kind)i.add(t.name.value);else if("VariableDefinition"===t.kind){var a=t.type;"NamedType"===a.kind&&i.add(a.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,i)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,i)})),t.definitions&&t.definitions.forEach((function(t){e(t,i)}))}(e,t),a[e.name.value]=t}})),e.exports=i,e.exports.pathLastCommit=function(e,t){var i={kind:e.kind,definitions:[n(e,t)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var r=a[t]||new Set,s=new Set,l=new Set;for(r.forEach((function(e){l.add(e)}));l.size>0;){var o=l;l=new Set,o.forEach((function(e){s.has(e)||(s.add(e),(a[e]||new Set).forEach((function(e){l.add(e)})))}))}return s.forEach((function(t){var a=n(e,t);a&&i.definitions.push(a)})),i}(i,"pathLastCommit")}}]);
//# sourceMappingURL=treeList.59f95142.chunk.js.map