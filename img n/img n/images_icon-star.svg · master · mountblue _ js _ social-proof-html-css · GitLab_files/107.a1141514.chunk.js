(this.webpackJsonp=this.webpackJsonp||[]).push([[107],{"8Igx":function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));const i=function(e="",...n){console.error("[gitlab]",e+"\n",...n)}},A0s0:function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));var i=t("JsS9");const a=function(e,n){return e===i.f.terminated?i.f.terminated:n===i.e.terminated?i.f.terminating:e===n||[i.f.unknown,i.f.failed,i.f.error,i.f.terminating].includes(e)?e:[i.e.stopped].includes(n)?i.f.stopping:n===i.e.restartRequested?e===i.f.stopped?i.f.starting:i.f.stopping:n===i.e.running&&e!==i.f.creationRequested?i.f.starting:e}},BFGK:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getProjectDetails"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectFullPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectFullPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nameWithNamespace"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"group"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"fullPath"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"repository"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rootRef"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:203}};t.loc.source={body:"query getProjectDetails($projectFullPath: ID!) {\n  project(fullPath: $projectFullPath) {\n    id\n    nameWithNamespace\n    group {\n      id\n      fullPath\n    }\n    repository {\n      rootRef\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,n){for(var t=0;t<e.definitions.length;t++){var i=e.definitions[t];if(i.name&&i.name.value==n)return i}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var i=n.type;"NamedType"===i.kind&&t.add(i.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,t)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,t)})),n.definitions&&n.definitions.forEach((function(n){e(n,t)}))}(e,n),i[e.name.value]=n}})),e.exports=t,e.exports.getProjectDetails=function(e,n){var t={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=i[n]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(i[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(n){var i=a(e,n);i&&t.definitions.push(i)})),t}(t,"getProjectDetails")},CS74:function(e,n,t){"use strict";var i=t("Lzak"),a=t("z1xw"),r=t("/lV4"),s=t("JsS9");const o={labels:{[s.f.creationRequested]:Object(r.s__)("Workspaces|Creating"),[s.f.starting]:Object(r.s__)("Workspaces|Starting"),[s.f.running]:Object(r.s__)("Workspaces|Running"),[s.f.stopping]:Object(r.s__)("Workspaces|Stopping"),[s.f.stopped]:Object(r.s__)("Workspaces|Stopped"),[s.f.terminating]:Object(r.s__)("Workspaces|Terminating"),[s.f.terminated]:Object(r.s__)("Workspaces|Terminated"),[s.f.failed]:Object(r.s__)("Workspaces|Failed"),[s.f.error]:Object(r.s__)("Workspaces|Error"),[s.f.unknown]:Object(r.s__)("Workspaces|Unknown state")}},d=[s.f.creationRequested,s.f.starting,s.f.stopping,s.f.terminating],l={[s.f.creationRequested]:"success",[s.f.starting]:"success",[s.f.running]:"success",[s.f.failed]:"danger",[s.f.error]:"danger",[s.f.stopping]:"info",[s.f.stopped]:"info",[s.f.terminating]:"muted",[s.f.terminated]:"muted",[s.f.unknown]:"danger"};var c={components:{GlBadge:i.a},directives:{GlTooltip:a.a},props:{workspaceDisplayState:{type:String,required:!0,validator:function(e){return Object.values(s.f).includes(e)}}},computed:{iconName(){return d.includes(this.workspaceDisplayState)?"status":""},iconLabel(){return o.labels[this.workspaceDisplayState]},variant(){return l[this.workspaceDisplayState]}}},u=t("tBpV"),m=Object(u.a)(c,(function(){return(0,this._self._c)("gl-badge",{staticClass:"workspace-state-indicator",attrs:{icon:this.iconName,variant:this.variant,"data-testid":"workspace-state-indicator","data-qa-title":this.iconLabel}},[this._v(this._s(this.iconLabel))])}),[],!1,null,null,null);n.a=m.exports},EEhv:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getRemoteDevelopmentClusterAgents"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"namespace"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"namespace"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"namespace"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"remoteDevelopmentClusterAgents"},arguments:[{kind:"Argument",name:{kind:"Name",value:"filter"},value:{kind:"EnumValue",value:"AVAILABLE"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"project"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nameWithNamespace"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"workspacesAgentConfig"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"defaultMaxHoursBeforeTermination"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:383}};t.loc.source={body:"query getRemoteDevelopmentClusterAgents($namespace: ID!) {\n  namespace(fullPath: $namespace) {\n    id\n    remoteDevelopmentClusterAgents(filter: AVAILABLE) {\n      nodes {\n        id\n        name\n        project {\n          id\n          nameWithNamespace\n        }\n        workspacesAgentConfig {\n          id\n          defaultMaxHoursBeforeTermination\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,n){for(var t=0;t<e.definitions.length;t++){var i=e.definitions[t];if(i.name&&i.name.value==n)return i}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var i=n.type;"NamedType"===i.kind&&t.add(i.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,t)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,t)})),n.definitions&&n.definitions.forEach((function(n){e(n,t)}))}(e,n),i[e.name.value]=n}})),e.exports=t,e.exports.getRemoteDevelopmentClusterAgents=function(e,n){var t={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=i[n]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(i[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(n){var i=a(e,n);i&&t.definitions.push(i)})),t}(t,"getRemoteDevelopmentClusterAgents")},JsS9:function(e,n,t){"use strict";t.d(n,"f",(function(){return s})),t.d(n,"e",(function(){return o})),t.d(n,"b",(function(){return d})),t.d(n,"c",(function(){return l})),t.d(n,"d",(function(){return c})),t.d(n,"a",(function(){return u}));var i=t("2Z+u"),a=t.n(i),r=t("/lV4");const s={creationRequested:"CreationRequested",starting:"Starting",running:"Running",stopping:"Stopping",stopped:"Stopped",terminating:"Terminating",terminated:"Terminated",failed:"Failed",error:"Error",unknown:"Unknown"},o={...a()(s,"running","stopped","terminated"),restartRequested:"RestartRequested"},d=Object(r.s__)("Workspaces|Unable to load current workspaces. Please try again or contact an administrator."),l=10,c=3e3,u=1e3},PHjo:function(e,n,t){"use strict";var i=t("o4PY"),a=t.n(i),r=(t("3UXl"),t("iyoE"),t("UezY"),t("z6RN"),t("hG7+"),t("Bo17")),s=t("z1xw"),o=t("/lV4"),d=t("JsS9");const l=[{key:"restart",isVisible:function(e){return[d.f.failed,d.f.error,d.f.unknown].includes(e)},desiredState:d.e.restartRequested,title:Object(o.s__)("Workspaces|Restart")},{key:"start",isVisible:function(e){return e===d.f.stopped},desiredState:d.e.running,title:Object(o.s__)("Workspaces|Start")},{key:"stop",isVisible:function(e){return e===d.f.running},desiredState:d.e.stopped,title:Object(o.s__)("Workspaces|Stop")},{key:"terminate",isVisible:function(e){return![d.f.terminated,d.f.terminating].includes(e)},desiredState:d.e.terminated,title:Object(o.s__)("Workspaces|Terminate"),extraAttrs:{class:"!gl-text-red-500"}}];var c={components:{GlDisclosureDropdown:r.a},directives:{GlTooltip:s.a},props:{workspaceDisplayState:{type:String,required:!0,validator:function(e){return Object.values(d.f).includes(e)}}},computed:{actions(){var e=this;return l.filter((function({isVisible:n}){return n(e.workspaceDisplayState)})).map((function({desiredState:n,key:t,title:i,extraAttrs:r}){return{key:t,id:a()("action-wrapper-"+t),text:i,action:function(){return e.$emit("click",n)},extraAttrs:r}}))}}},u=t("tBpV"),m=Object(u.a)(c,(function(){var e=this,n=e._self._c;return e.actions.length>0?n("gl-disclosure-dropdown",{attrs:{items:e.actions,icon:"ellipsis_v","toggle-text":"Actions","text-sr-only":"",category:"tertiary","no-caret":"","positioning-strategy":"fixed","data-testid":"workspace-actions-dropdown"},scopedSlots:e._u([{key:"list-item",fn:function({item:t}){return[n("span",{key:t.key,attrs:{id:t.id,"data-testid":`workspace-${t.key}-button`}},[e._v("\n      "+e._s(t.text)+"\n    ")])]}}],null,!1,3549335071)}):e._e()}),[],!1,null,null,null);n.a=m.exports},S7l5:function(e,n,t){"use strict";var i=t("FxFN"),a=t("4wgn"),r=t("/lV4"),s=t("8Igx"),o=t("wA8H"),d=t.n(o);const l={updateWorkspaceFailedMessage:Object(r.s__)("Workspaces|Failed to update workspace")};var c={methods:{async update(e,n={}){try{const{data:t}=await this.$apollo.mutate({mutation:d.a,variables:{input:{id:Object(i.c)(a.P,e),...n}}}),{errors:[r]}=t.workspaceUpdate;r?this.$emit("updateFailed",{error:r}):this.$emit("updateSucceed")}catch(e){Object(s.a)(e),this.$emit("updateFailed",{error:l.updateWorkspaceFailedMessage})}}},render(){return this.$scopedSlots.default({update:this.update})}},u=t("tBpV"),m=Object(u.a)(c,void 0,void 0,!1,null,null,null);n.a=m.exports},o0Q0:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"WorkspaceItem"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Workspace"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"namespace"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"projectId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"desiredState"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"actualState"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"devfileRef"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"devfilePath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"devfileWebUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"maxHoursBeforeTermination"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]}]}}],loc:{start:0,end:194}};t.loc.source={body:"fragment WorkspaceItem on Workspace {\n  id\n  name\n  namespace\n  projectId\n  desiredState\n  actualState\n  url\n  devfileRef\n  devfilePath\n  devfileWebUrl\n  maxHoursBeforeTermination\n  createdAt\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,n){for(var t=0;t<e.definitions.length;t++){var i=e.definitions[t];if(i.name&&i.name.value==n)return i}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var i=n.type;"NamedType"===i.kind&&t.add(i.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,t)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,t)})),n.definitions&&n.definitions.forEach((function(n){e(n,t)}))}(e,n),i[e.name.value]=n}})),e.exports=t,e.exports.WorkspaceItem=function(e,n){var t={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=i[n]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(i[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(n){var i=a(e,n);i&&t.definitions.push(i)})),t}(t,"WorkspaceItem")},t9iZ:function(e,n,t){"use strict";t("eJ0a"),t("ZzK0"),t("z6RN"),t("BzOf"),t("3UXl"),t("iyoE");var i=t("8Igx"),a=t("BFGK"),r=t.n(a),s=t("EEhv"),o=t.n(s),d={props:{projectFullPath:{type:String,required:!1,default:""}},apollo:{projectDetails:{query:r.a,variables(){return{projectFullPath:this.projectFullPath}},skip(){return!this.projectFullPath},update:()=>[],error(e){Object(i.a)(e)},async result(e){if(e.error||!e.data.project)return void this.$emit("error");const{nameWithNamespace:n,repository:t,group:a,id:r}=e.data.project,s=t?t.rootRef:null;if(!a)return void this.$emit("result",{id:r,fullPath:this.projectFullPath,nameWithNamespace:n,clusterAgents:[],rootRef:s});const{clusterAgents:o,errors:d}=await this.fetchRemoteDevelopmentClusterAgents(a.fullPath);if(Array.isArray(d)&&d.length)return d.forEach((function(e){return Object(i.a)(e)})),void this.$emit("error");this.$emit("result",{id:r,fullPath:this.projectFullPath,nameWithNamespace:n,clusterAgents:o,rootRef:s})}}},methods:{async fetchRemoteDevelopmentClusterAgents(e){try{var n;const{data:t,error:i}=await this.$apollo.query({query:o.a,variables:{namespace:e}});return i?{errors:[i]}:{clusterAgents:(null===(n=t.namespace)||void 0===n||null===(n=n.remoteDevelopmentClusterAgents)||void 0===n?void 0:n.nodes.map((function({id:e,name:n,project:t,workspacesAgentConfig:i}){return{value:e,text:`${t.nameWithNamespace} / ${n}`,defaultMaxHoursBeforeTermination:i.defaultMaxHoursBeforeTermination}})))||[]}}catch(e){return{errors:[e]}}}},render(){var e,n;return null===(e=(n=this.$scopedSlots).default)||void 0===e?void 0:e.call(n)}},l=t("tBpV"),c=Object(l.a)(d,void 0,void 0,!1,null,null,null);n.a=c.exports},wA8H:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"workspaceUpdate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"WorkspaceUpdateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"workspaceUpdate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"workspace"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"actualState"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"desiredState"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"errors"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:178}};t.loc.source={body:"mutation workspaceUpdate($input: WorkspaceUpdateInput!) {\n  workspaceUpdate(input: $input) {\n    workspace {\n      id\n      actualState\n      desiredState\n    }\n    errors\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,n){for(var t=0;t<e.definitions.length;t++){var i=e.definitions[t];if(i.name&&i.name.value==n)return i}}t.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,t){if("FragmentSpread"===n.kind)t.add(n.name.value);else if("VariableDefinition"===n.kind){var i=n.type;"NamedType"===i.kind&&t.add(i.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,t)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,t)})),n.definitions&&n.definitions.forEach((function(n){e(n,t)}))}(e,n),i[e.name.value]=n}})),e.exports=t,e.exports.workspaceUpdate=function(e,n){var t={kind:e.kind,definitions:[a(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var r=i[n]||new Set,s=new Set,o=new Set;for(r.forEach((function(e){o.add(e)}));o.size>0;){var d=o;o=new Set,d.forEach((function(e){s.has(e)||(s.add(e),(i[e]||new Set).forEach((function(e){o.add(e)})))}))}return s.forEach((function(n){var i=a(e,n);i&&t.definitions.push(i)})),t}(t,"workspaceUpdate")}}]);
//# sourceMappingURL=107.a1141514.chunk.js.map