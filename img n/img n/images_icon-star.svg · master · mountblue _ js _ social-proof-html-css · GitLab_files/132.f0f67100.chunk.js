(this.webpackJsonp=this.webpackJsonp||[]).push([[132],{Pyc4:function(e,t,i){"use strict";i.r(t);var n=i("FkSe"),o=(i("UezY"),i("z6RN"),i("hG7+"),i("Bo17")),a=i("fSQg"),r=i("XiQx"),s=i("/lV4"),l=i("3twG"),d=i("ygVz"),c=(i("3UXl"),i("iyoE"),i("1cpz")),u=i("MV2A"),p=i("WHSv"),k=i.n(p);const f={btnText:Object(s.__)("Create a new fork"),title:Object(s.__)("Fork project?"),message:Object(s.__)("You canâ€™t edit files directly in this project."),existingForksMessage:Object(s.__)("To submit your changes in a merge request, switch to one of these forks or create a new fork."),newForkMessage:Object(s.__)("To submit your changes in a merge request, create a new fork.")};var m={name:"ConfirmForkModal",components:{GlModal:c.a,GlLoadingIcon:n.a,GlLink:u.a},inject:{projectPath:{default:""}},model:{prop:"visible",event:"change"},props:{visible:{type:Boolean,required:!1,default:!1},modalId:{type:String,required:!0},forkPath:{type:String,required:!0}},data:()=>({forks:[]}),apollo:{forks:{query:k.a,variables(){return{projectPath:this.projectPath}},update({project:e}={}){var t;return null==e||null===(t=e.visibleForks)||void 0===t?void 0:t.nodes.map((function(e){return{text:e.fullPath,href:e.webUrl}}))}}},computed:{isLoading(){return this.$apollo.queries.forks.loading},hasWritableForks(){return this.forks.length},btnActions(){return{cancel:{text:Object(s.__)("Cancel")},primary:{text:this.$options.i18n.btnText,attributes:{href:this.forkPath,variant:"confirm"}}}}},i18n:f},h=i("tBpV"),g=Object(h.a)(m,(function(){var e=this,t=e._self._c;return t("gl-modal",{attrs:{visible:e.visible,"modal-id":e.modalId,title:e.$options.i18n.title,"action-primary":e.btnActions.primary,"action-cancel":e.btnActions.cancel},on:{change:function(t){return e.$emit("change",t)}}},[t("p",[e._v(e._s(e.$options.i18n.message))]),e._v(" "),e.isLoading?t("gl-loading-icon"):e.hasWritableForks?[t("p",[e._v(e._s(e.$options.i18n.existingForksMessage))]),e._v(" "),e._l(e.forks,(function(i){return t("div",{key:i.text},[t("gl-link",{attrs:{href:i.href}},[e._v(e._s(i.text))])],1)}))]:t("p",[e._v(e._s(e.$options.i18n.newForkMessage))])],2)}),[],!1,null,null,null).exports,b=i("d08M"),v=i("wQDE");const w={webIdeText:Object(s.s__)("WebIDE|Quickly and easily edit multiple files in your project."),webIdeTooltip:Object(s.s__)("WebIDE|Quickly and easily edit multiple files in your project. Press . to open"),toggleText:Object(s.__)("Edit"),gitpodText:Object(s.__)("Launch a ready-to-code development environment for your project.")};var _={name:"CEWebIdeLink",components:{GlDisclosureDropdown:o.a,GlDisclosureDropdownGroup:a.a,GlDisclosureDropdownItem:r.b,ConfirmForkModal:g},i18n:w,mixins:[d.b.mixin()],props:{isFork:{type:Boolean,required:!1,default:!1},needsToFork:{type:Boolean,required:!1,default:!1},needsToForkWithWebIde:{type:Boolean,required:!1,default:!1},gitpodEnabled:{type:Boolean,required:!1,default:!1},isBlob:{type:Boolean,required:!1,default:!1},showEditButton:{type:Boolean,required:!1,default:!0},showWebIdeButton:{type:Boolean,required:!1,default:!0},showGitpodButton:{type:Boolean,required:!1,default:!1},showPipelineEditorButton:{type:Boolean,required:!1,default:!1},editUrl:{type:String,required:!1,default:""},buttonVariant:{type:String,required:!1,default:null},pipelineEditorUrl:{type:String,required:!1,default:""},webIdeUrl:{type:String,required:!1,default:""},webIdeText:{type:String,required:!1,default:""},gitpodUrl:{type:String,required:!1,default:""},gitpodText:{type:String,required:!1,default:""},disableForkModal:{type:Boolean,required:!1,default:!1},forkPath:{type:String,required:!1,default:""},forkModalId:{type:String,required:!1,default:""},cssClasses:{type:String,required:!1,default:"sm:gl-ml-3"}},data:()=>({showForkModal:!1}),computed:{actions(){return[this.pipelineEditorAction,this.webIdeAction,this.editAction,this.gitpodAction].filter((function(e){return e}))},hasActions(){return this.actions.length>0},editButtonVariant(){return this.buttonVariant?this.buttonVariant:this.isBlob?"confirm":"default"},editAction(){var e=this;if(!this.showEditButton)return null;const t=this.needsToFork?{href:"#modal-confirm-fork-edit",handle:function(){e.disableForkModal?e.$emit("edit","simple"):e.showModal("showForkModal")}}:{href:this.editUrl};return{key:"edit",text:Object(s.__)("Edit single file"),secondaryText:Object(s.__)("Edit this file only."),tracking:{action:"click_consolidated_edit",label:"single_file"},...t}},shortcutsDisabled:()=>Object(v.b)(),webIdeActionShortcutKey:()=>Object(b.Ab)(b.v)[0],webIdeActionText(){return this.webIdeText?this.webIdeText:this.isBlob?Object(s.__)("Open in Web IDE"):this.isFork?Object(s.__)("Edit fork in Web IDE"):Object(s.__)("Web IDE")},webIdeAction(){var e=this;if(!this.showWebIdeButton)return null;const t=this.needsToForkWithWebIde?{handle:function(){e.disableForkModal?e.$emit("edit","ide"):e.showModal("showForkModal")}}:{handle:function(){Object(l.R)(e.webIdeUrl,!0)}};return{key:"webide",text:this.webIdeActionText,secondaryText:this.$options.i18n.webIdeText,shortcut:this.webIdeActionShortcutKey,tracking:{action:"click_consolidated_edit",label:"web_ide"},...t}},gitpodActionText(){return this.isBlob?Object(s.__)("Open in Gitpod"):this.gitpodText||Object(s.__)("Gitpod")},computedShowGitpodButton(){return this.showGitpodButton&&this.gitpodEnabled&&this.gitpodUrl},pipelineEditorAction(){if(!this.showPipelineEditorButton)return null;const e=Object(s.__)("Edit, lint, and visualize your pipeline.");return{key:"pipeline_editor",text:Object(s.__)("Edit in pipeline editor"),secondaryText:e,href:this.pipelineEditorUrl,tracking:{action:"click_consolidated_edit",label:"pipeline_editor"}}},gitpodAction(){var e=this;if(!this.computedShowGitpodButton)return null;const t={handle:function(){Object(l.R)(e.gitpodUrl,!0)}};return{key:"gitpod",text:this.gitpodActionText,secondaryText:this.$options.i18n.gitpodText,tracking:{action:"click_consolidated_edit",label:"gitpod"},...t}},mountForkModal(){const{disableForkModal:e,showWebIdeButton:t,showEditButton:i}=this;return!e&&(t||i)}},methods:{showModal(e){this[e]=!0},executeAction(e){var t;this.track(e.tracking.action,{label:e.tracking.label}),null===(t=e.handle)||void 0===t||t.call(e)}}},y=Object(h.a)(_,(function(){var e=this,t=e._self._c;return e.hasActions?t("div",{class:e.cssClasses},[t("gl-disclosure-dropdown",{attrs:{variant:e.editButtonVariant,category:e.isBlob?"primary":"secondary","toggle-text":e.$options.i18n.toggleText,"data-testid":"action-dropdown","fluid-width":"",block:""},on:{shown:function(t){return e.$emit("shown")},hidden:function(t){return e.$emit("hidden")}}},[e._t("before-actions"),e._v(" "),t("gl-disclosure-dropdown-group",{staticClass:"edit-dropdown-group-width"},e._l(e.actions,(function(i){return t("gl-disclosure-dropdown-item",{key:i.key,attrs:{item:i,"data-testid":i.key+"-menu-item"},on:{action:function(t){return e.executeAction(i)}},scopedSlots:e._u([{key:"list-item",fn:function(){return[t("div",{staticClass:"gl-flex gl-flex-col"},[t("span",{staticClass:"gl-mb-2 gl-flex gl-items-center gl-justify-between"},[t("span",{staticClass:"gl-font-bold",attrs:{"data-testid":"action-primary-text"}},[e._v(e._s(i.text))]),e._v(" "),i.shortcut&&!e.shortcutsDisabled?t("kbd",{staticClass:"flat"},[e._v(e._s(i.shortcut))]):e._e()]),e._v(" "),t("span",{staticClass:"gl-text-sm gl-text-subtle",attrs:{"data-testid":"action-secondary-text"}},[e._v("\n              "+e._s(i.secondaryText)+"\n            ")])])]},proxy:!0}],null,!0)})})),1),e._v(" "),e._t("after-actions")],2),e._v(" "),e.mountForkModal?t("confirm-fork-modal",{attrs:{"modal-id":e.forkModalId,"fork-path":e.forkPath},model:{value:e.showForkModal,callback:function(t){e.showForkModal=t},expression:"showForkModal"}}):e._e()],1):e._e()}),[],!1,null,null,null).exports,S=i("sHIo"),j=i("dsWN"),W=i("4lAS"),x=i("30su"),D=i("8Igx"),F=i("qLpH"),I=i("FxFN"),N=i("4wgn"),E=i("ZaD5"),A=i.n(E),P=i("JsS9"),O=i("S7l5"),q=i("Fsq/"),T=i("CS74"),G=i("PHjo"),$=i("A0s0"),M={components:{GlLink:u.a,WorkspaceStateIndicator:T.a,WorkspaceActions:G.a,TimeAgoTooltip:q.a},i18n:{created:Object(s.s__)("Workspaces|Created")},mixins:[d.b.mixin()],props:{workspace:{type:Object,required:!0}},computed:{dropdownItem(){return{href:this.workspace.url,text:this.workspace.name}},displayState(){return Object($.a)(this.workspace.actualState,this.workspace.desiredState)},isRunning(){return this.displayState===P.f.running}},methods:{trackOpenWorkspace(){this.track("click_consolidated_edit",{label:"workspace"})}}},B=Object(h.a)(M,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"gl-flex gl-items-center gl-justify-between gl-px-4 gl-py-3"},[t("span",{staticClass:"gl-inline-flex gl-flex-col gl-items-start gl-gap-2"},[e.isRunning?t("gl-link",{staticClass:"gl-break-anywhere",attrs:{href:e.workspace.url},on:{keydown:function(e){e.stopPropagation()},click:e.trackOpenWorkspace}},[e._v(e._s(e.workspace.name))]):t("span",{staticClass:"gl-break-anywhere"},[e._v(e._s(e.workspace.name))]),e._v(" "),t("div",{staticClass:"gl-flex gl-gap-2"},[t("workspace-state-indicator",{attrs:{"workspace-display-state":e.displayState}}),e._v(" "),t("div",{staticClass:"gl-text-subtle"},[e._v("\n        "+e._s(e.$options.i18n.created)+"\n        "),t("time-ago-tooltip",{attrs:{time:e.workspace.createdAt}})],1)],1)],1),e._v(" "),t("span",{on:{keydown:function(e){e.stopPropagation()}}},[t("workspace-actions",{attrs:{"workspace-display-state":e.displayState},on:{click:function(t){return e.$emit("updateWorkspace",{desiredState:t})}}})],1)])}),[],!1,null,null,null).exports;const V={workspacesGroupLabel:Object(s.s__)("Workspaces|Your workspaces"),newWorkspaceButton:Object(s.s__)("Workspaces|New workspace"),noWorkspacesMessage:Object(s.s__)("Workspaces|A workspace is a virtual sandbox environment for your code in GitLab."),loadingWorkspacesFailedMessage:Object(s.s__)("Workspaces|Could not load workspaces"),noWorkspacesSupportMessage:Object(s.__)("No agents available to create workspaces. Please consult %{linkStart}Workspaces documentation%{linkEnd} for troubleshooting.")},L=Object(F.a)("user/workspace/index.md"),C=Object(F.a)("user/workspace/configuration.html",{anchor:"troubleshooting"});var U={components:{GlAlert:j.a,GlButton:W.a,GlDisclosureDropdownGroup:a.a,GlLoadingIcon:n.a,GlLink:u.a,GlSprintf:x.a,WorkspaceDropdownItem:B,UpdateWorkspaceMutation:O.a},props:{projectId:{type:Number,required:!0},projectFullPath:{type:String,required:!0},newWorkspacePath:{type:String,required:!0},supportsWorkspaces:{type:Boolean,required:!0},borderPosition:{type:String,required:!0}},apollo:{workspaces:{query:A.a,pollInterval:P.d,variables(){return{first:P.c,after:null,before:null,includeActualStates:[P.f.creationRequested,P.f.starting,P.f.running,P.f.stopping,P.f.stopped,P.f.terminating,P.f.failed,P.f.error,P.f.unknown],projectIds:[Object(I.c)(N.E,this.projectId)]}},skip(){return!this.supportsWorkspaces},update(e){var t;return this.loadingWorkspacesFailed=!1,(null===(t=e.currentUser.workspaces)||void 0===t?void 0:t.nodes)||[]},error(e){this.loadingWorkspacesFailed=!0,Object(D.a)(e)}}},data:()=>({workspaces:[],loadingWorkspacesFailed:!1,updateWorkspaceErrorMessage:null}),computed:{hasWorkspaces(){return this.workspaces.length>0},isLoading(){return this.$apollo.queries.workspaces.loading},newWorkspacePathWithProjectId(){return`${this.newWorkspacePath}?project=${encodeURIComponent(this.projectFullPath)}`}},methods:{displayUpdateFailedAlert({error:e}){this.updateWorkspaceErrorMessage=e},hideUpdateFailedAlert(){this.updateWorkspaceErrorMessage=null}},i18n:V,workspacesHelpPath:L,workspacesTroubleshootingDocsPath:C},R=Object(h.a)(U,(function(){var e=this,t=e._self._c;return t("update-workspace-mutation",{on:{updateSucceed:e.hideUpdateFailedAlert,updateFailed:e.displayUpdateFailedAlert},scopedSlots:e._u([{key:"default",fn:function({update:i}){return[t("gl-disclosure-dropdown-group",{staticClass:"edit-dropdown-group-width gl-pt-2",attrs:{bordered:"","border-position":e.borderPosition,"data-testid":"workspaces-dropdown-group"},scopedSlots:e._u([{key:"group-label",fn:function(){return[t("span",{staticClass:"gl-mb-2 gl-flex gl-text-base gl-leading-1"},[e._v(e._s(e.$options.i18n.workspacesGroupLabel))])]},proxy:!0}],null,!0)},[e._v(" "),e.isLoading?t("gl-loading-icon"):[e.loadingWorkspacesFailed?t("gl-alert",{attrs:{variant:"danger","show-icon":!1,dismissible:!1}},[e._v("\n          "+e._s(e.$options.i18n.loadingWorkspacesFailedMessage)+"\n        ")]):e.hasWorkspaces?[e.updateWorkspaceErrorMessage?t("gl-alert",{attrs:{"data-testid":"update-workspace-error-alert",variant:"danger","show-icon":!1,dismissible:!1}},[e._v("\n            "+e._s(e.updateWorkspaceErrorMessage)+"\n          ")]):e._e(),e._v(" "),e._l(e.workspaces,(function(e){return t("workspace-dropdown-item",{key:e.id,attrs:{workspace:e},on:{updateWorkspace:function(t){return i(e.id,t)}}})}))]:t("div",{staticClass:"gl-mb-3 gl-px-4 gl-text-left gl-text-base",attrs:{"data-testid":"no-workspaces-message"}},[t("p",{staticClass:"gl-mb-0 gl-text-sm gl-text-subtle"},[e._v("\n            "+e._s(e.$options.i18n.noWorkspacesMessage)+"\n          ")]),e._v(" "),e.supportsWorkspaces?e._e():t("p",{staticClass:"gl-mb-0 gl-mt-2 gl-text-sm gl-text-subtle"},[t("gl-sprintf",{attrs:{message:e.$options.i18n.noWorkspacesSupportMessage},scopedSlots:e._u([{key:"link",fn:function({content:i}){return[t("gl-link",{attrs:{href:e.$options.workspacesTroubleshootingDocsPath,"data-testid":"workspaces-troubleshooting-doc-link",target:"_blank"}},[e._v(e._s(i)+"\n                ")])]}}],null,!0)})],1)]),e._v(" "),e.supportsWorkspaces?t("div",{staticClass:"gl-flex gl-justify-start gl-px-4 gl-py-3"},[e.supportsWorkspaces?t("gl-button",{attrs:{href:e.newWorkspacePathWithProjectId,"data-testid":"new-workspace-button",block:""}},[e._v(e._s(e.$options.i18n.newWorkspaceButton))]):e._e()],1):e._e()]],2)]}}])})}),[],!1,null,null,null).exports,Q=i("t9iZ"),H={components:{GlLoadingIcon:n.a,WorkspacesDropdownGroup:R,GetProjectDetailsQuery:Q.a,CeWebIdeLink:y},mixins:[Object(S.a)()],inject:{newWorkspacePath:{default:""}},props:{...y.props,projectPath:{type:String,required:!1,default:""},projectId:{type:Number,required:!1,default:0}},data:()=>({isDropdownVisible:!1,projectDetailsLoaded:!1,supportsWorkspaces:!1}),computed:{isWorkspacesDropdownGroupAvailable(){return this.glFeatures.remoteDevelopment},shouldRenderWorkspacesDropdownGroup(){return this.isWorkspacesDropdownGroupAvailable&&this.isDropdownVisible},shouldRenderWorkspacesDropdownGroupBeforeActions(){return this.shouldRenderWorkspacesDropdownGroup&&this.supportsWorkspaces},shouldRenderWorkspacesDropdownGroupAfterActions(){return this.shouldRenderWorkspacesDropdownGroup&&!this.supportsWorkspaces}},methods:{onDropdownShown(){this.isDropdownVisible=!0},onDropdownHidden(){this.isDropdownVisible=!1},onProjectDetailsResult({clusterAgents:e}){this.projectDetailsLoaded=!0,this.supportsWorkspaces=e.length>0},onProjectDetailsError(){this.projectDetailsLoaded=!0}}},z=Object(h.a)(H,(function(){var e=this,t=e._self._c;return t("ce-web-ide-link",e._b({on:{edit:function(t){return e.$emit("edit",t)},shown:e.onDropdownShown,hidden:e.onDropdownHidden},scopedSlots:e._u([e.shouldRenderWorkspacesDropdownGroup?{key:"after-actions",fn:function(){return[t("get-project-details-query",{attrs:{"project-full-path":e.projectPath},on:{result:e.onProjectDetailsResult,error:e.onProjectDetailsError}}),e._v(" "),e.projectDetailsLoaded?t("workspaces-dropdown-group",{attrs:{"new-workspace-path":e.newWorkspacePath,"project-id":e.projectId,"project-full-path":e.projectPath,"supports-workspaces":e.supportsWorkspaces,"border-position":"top"}}):t("div",{staticClass:"gl-my-3"},[t("gl-loading-icon")],1)]},proxy:!0}:null],null,!0)},"ce-web-ide-link",e.$props,!1))}),[],!1,null,null,null);t.default=z.exports},WHSv:function(e,t){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getWritableForks"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"visibleForks"},arguments:[{kind:"Argument",name:{kind:"Name",value:"minimumAccessLevel"},value:{kind:"EnumValue",value:"DEVELOPER"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"fullPath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:214}};i.loc.source={body:"query getWritableForks($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    visibleForks(minimumAccessLevel: DEVELOPER) {\n      nodes {\n        id\n        fullPath\n        webUrl\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var n={};function o(e,t){for(var i=0;i<e.definitions.length;i++){var n=e.definitions[i];if(n.name&&n.name.value==t)return n}}i.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,i){if("FragmentSpread"===t.kind)i.add(t.name.value);else if("VariableDefinition"===t.kind){var n=t.type;"NamedType"===n.kind&&i.add(n.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,i)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,i)})),t.definitions&&t.definitions.forEach((function(t){e(t,i)}))}(e,t),n[e.name.value]=t}})),e.exports=i,e.exports.getWritableForks=function(e,t){var i={kind:e.kind,definitions:[o(e,t)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=n[t]||new Set,r=new Set,s=new Set;for(a.forEach((function(e){s.add(e)}));s.size>0;){var l=s;s=new Set,l.forEach((function(e){r.has(e)||(r.add(e),(n[e]||new Set).forEach((function(e){s.add(e)})))}))}return r.forEach((function(t){var n=o(e,t);n&&i.definitions.push(n)})),i}(i,"getWritableForks")},ZaD5:function(e,t,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"userWorkspacesList"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"before"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"after"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"includeActualStates"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectIds"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ProjectID"}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"currentUser"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"workspaces"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"before"},value:{kind:"Variable",name:{kind:"Name",value:"before"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}},{kind:"Argument",name:{kind:"Name",value:"includeActualStates"},value:{kind:"Variable",name:{kind:"Name",value:"includeActualStates"}}},{kind:"Argument",name:{kind:"Name",value:"projectIds"},value:{kind:"Variable",name:{kind:"Name",value:"projectIds"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nodes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"WorkspaceItem"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"PageInfo"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:552}};n.loc.source={body:'#import "~/graphql_shared/fragments/page_info.fragment.graphql"\n#import "../fragments/workspace_item.fragment.graphql"\n\nquery userWorkspacesList(\n  $first: Int\n  $before: String\n  $after: String\n  $includeActualStates: [String!]\n  $projectIds: [ProjectID!]\n) {\n  currentUser {\n    id\n    workspaces(\n      first: $first\n      before: $before\n      after: $after\n      includeActualStates: $includeActualStates\n      projectIds: $projectIds\n    ) {\n      nodes {\n        ...WorkspaceItem\n      }\n      pageInfo {\n        ...PageInfo\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var o={};function a(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var t=e.name.value;return!o[t]&&(o[t]=!0,!0)}))}n.definitions=n.definitions.concat(a(i("5wtN").definitions)),n.definitions=n.definitions.concat(a(i("o0Q0").definitions));var r={};function s(e,t){for(var i=0;i<e.definitions.length;i++){var n=e.definitions[i];if(n.name&&n.name.value==t)return n}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,i){if("FragmentSpread"===t.kind)i.add(t.name.value);else if("VariableDefinition"===t.kind){var n=t.type;"NamedType"===n.kind&&i.add(n.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,i)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,i)})),t.definitions&&t.definitions.forEach((function(t){e(t,i)}))}(e,t),r[e.name.value]=t}})),e.exports=n,e.exports.userWorkspacesList=function(e,t){var i={kind:e.kind,definitions:[s(e,t)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var n=r[t]||new Set,o=new Set,a=new Set;for(n.forEach((function(e){a.add(e)}));a.size>0;){var l=a;a=new Set,l.forEach((function(e){o.has(e)||(o.add(e),(r[e]||new Set).forEach((function(e){a.add(e)})))}))}return o.forEach((function(t){var n=s(e,t);n&&i.definitions.push(n)})),i}(n,"userWorkspacesList")}}]);
//# sourceMappingURL=132.f0f67100.chunk.js.map